The ``4-print_square`` module
============================

Using ``print_square``
---------------------

Importing the module:
    >>> print_square = __import__('4-print_square').print_square

Testing a normal print of 0 #:
    >>> print_square(0)

Testing a normal print of 1 #:
    >>> print_square(1)
    #

Testing a normal print of 2 #:
    >>> print_square(2)
    ##
    ##

Testing a normal print of 3 #:
    >>> print_square(3)
    ###
    ###
    ###

Testing a normal print of 9 #:
    >>> print_square(9)
    #########
    #########
    #########
    #########
    #########
    #########
    #########
    #########
    #########

Testing a negative input:
    >>> print_square(-1)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Testing a float input:
    >>> print_square(9.0)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Testing a string input:
    >>> print_square("foo")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Testing None:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Testing infinte:
    >>> print_square(float('inf'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Testing NaN:
    >>> print_square(float('nan'))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Missing the argument:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'
